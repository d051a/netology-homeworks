---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted

  tasks:
    - name: Determine package manager
      ansible.builtin.set_fact:
        pkg_mgr: "{{ 'dnf' if ansible_os_family == 'RedHat' else 'apt' }}"

    - name: Ensure python3 is installed (RedHat-based)
      become: true
      ansible.builtin.dnf:
        name: python3-dnf
        state: present
      when: pkg_mgr == 'dnf'

    - name: Ensure python3 is installed (Debian-based)
      become: true
      ansible.builtin.apt:
        name: python3-apt
        state: present
      when: pkg_mgr == 'apt'

    - name: Add Clickhouse repository (RedHat-based)
      become: true
      ansible.builtin.yum_repository:
        name: clickhouse
        description: ClickHouse Repository
        baseurl: https://packages.clickhouse.com/rpm/stable/
        gpgkey: https://packages.clickhouse.com/rpm/stable/repodata/repomd.xml.key
        gpgcheck: false
        repo_gpgcheck: false
        enabled: true
      when: pkg_mgr == 'dnf'

    - name: Download Clickhouse packages (RedHat-based)
      block:
        - name: Get clickhouse common package
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "/tmp/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            mode: '0644'
          when: pkg_mgr == 'dnf'

        - name: Get clickhouse client package
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-client-{{ clickhouse_version }}.noarch.rpm"
            dest: "/tmp/clickhouse-client-{{ clickhouse_version }}.noarch.rpm"
            mode: '0644'
          when: pkg_mgr == 'dnf'

        - name: Get clickhouse server package
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-server-{{ clickhouse_version }}.noarch.rpm"
            dest: "/tmp/clickhouse-server-{{ clickhouse_version }}.noarch.rpm"
            mode: '0644'
          when: pkg_mgr == 'dnf'

    - name: Install clickhouse packages (RedHat-based)
      become: true
      ansible.builtin.dnf:
        name:
          - /tmp/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm
          - /tmp/clickhouse-client-{{ clickhouse_version }}.noarch.rpm
          - /tmp/clickhouse-server-{{ clickhouse_version }}.noarch.rpm
        state: present
        disable_gpg_check: true
      notify: Start clickhouse service
      when: pkg_mgr == 'dnf'

    - name: Download Clickhouse packages (Debian-based)
      block:
        - name: Get clickhouse client package
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/stable/main/clickhouse-client_{{ clickhouse_version }}_all.deb"
            dest: "/tmp/clickhouse-client_{{ clickhouse_version }}_all.deb"
            mode: '0644'
          when: pkg_mgr == 'apt'

        - name: Get clickhouse common package
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/stable/main/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"
            dest: "/tmp/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"
            mode: '0644'
          when: pkg_mgr == 'apt'

        - name: Get clickhouse server package
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/stable/main/clickhouse-server_{{ clickhouse_version }}_all.deb"
            dest: "/tmp/clickhouse-server_{{ clickhouse_version }}_all.deb"
            mode: '0644'
          when: pkg_mgr == 'apt'

    - name: Install clickhouse packages (Debian-based)
      become: true
      ansible.builtin.command:
        cmd: "dpkg -i /tmp/{{ item }}"
      loop:
        - clickhouse-common-static_{{ clickhouse_version }}_amd64.deb
        - clickhouse-client_{{ clickhouse_version }}_all.deb
        - clickhouse-server_{{ clickhouse_version }}_all.deb
      notify: Start clickhouse service
      when: pkg_mgr == 'apt'
      changed_when: false

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Create database
      ansible.builtin.command:
        cmd: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0


- name: Install and configure Vector
  hosts: vector
  handlers:
    - name: Restart vector service
      become: true
      ansible.builtin.systemd:
        name: vector
        state: restarted

  tasks:
    - name: Determine package manager
      ansible.builtin.set_fact:
        pkg_mgr: "{{ 'dnf' if ansible_os_family == 'RedHat' else 'apt' }}"

    - name: Create installation directory
      become: true
      ansible.builtin.file:
        path: "{{ vector_install_path }}"
        state: directory
        mode: '0755'

    - name: Get Vector distrib (RedHat-based)
      become: true
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-1.x86_64.rpm"
        dest: "/tmp/vector-{{ vector_version }}-1.x86_64.rpm"
        mode: '0644'
      when: pkg_mgr == 'dnf'

    - name: Get Vector distrib (Debian-based)
      become: true
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector_{{ vector_version }}-1_amd64.deb"
        dest: "/tmp/vector_{{ vector_version }}-1_amd64.deb"
        mode: '0644'
      when: pkg_mgr == 'apt'

    - name: Install Vector package (RedHat-based)
      become: true
      ansible.builtin.dnf:
        name: "/tmp/vector-{{ vector_version }}-1.x86_64.rpm"
        state: present
      notify: Restart vector service
      when: pkg_mgr == 'dnf'

    - name: Install Vector package (Debian-based)
      become: true
      ansible.builtin.apt:
        deb: "/tmp/vector_{{ vector_version }}-1_amd64.deb"
      notify: Restart vector service
      when: pkg_mgr == 'apt'

    - name: Create configuration directory
      become: true
      ansible.builtin.file:
        path: "{{ vector_config_path }}"
        state: directory
        mode: '0755'

    - name: Deploy Vector configuration
      become: true
      ansible.builtin.template:
        src: "templates/vector_config.j2"
        dest: "{{ vector_config_path }}/vector.toml"
        mode: '0644'
      notify: Restart vector service

- name: Install and configure LightHouse
  hosts: lighthouse
  become: true
  handlers:
    - name: Restart nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted

  tasks:
    - name: Ensure Git is installed
      ansible.builtin.package:
        name: git
        state: present

    - name: Create LightHouse directory
      ansible.builtin.file:
        path: /var/www/lighthouse
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Clone LightHouse repository
      ansible.builtin.git:
        repo: 'https://github.com/VKCOM/lighthouse.git'
        dest: /var/www/lighthouse
        version: master
        force: true

    - name: Ensure Nginx is installed (RedHat-based)
      ansible.legacy.dnf:
        name: nginx
        state: present
      when: ansible_os_family == "RedHat"

    - name: Ensure Nginx is installed (Debian-based)
      ansible.builtin.apt:
        name: nginx
        state: present
        update_cache: true
      when: ansible_os_family == "Debian"

    - name: Create Nginx configuration directory
      ansible.builtin.file:
        path: /etc/nginx/conf.d
        state: directory
        mode: '0755'

    - name: Configure Nginx for LightHouse
      ansible.builtin.template:
        src: templates/lighthouse.conf.j2
        dest: /etc/nginx/conf.d/lighthouse.conf
        mode: '0644'

    - name: Remove default Nginx configuration (RedHat-based)
      ansible.builtin.file:
        path: /etc/nginx/conf.d/default.conf
        state: absent
      when: ansible_os_family == "RedHat"

    - name: Remove default Nginx configuration (Debian-based)
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      when: ansible_os_family == "Debian"

    - name: Ensure correct permissions for LightHouse files
      ansible.builtin.command:
        cmd: "chown -R www-data:www-data /var/www/lighthouse"
      args:
        chdir: /var/www/lighthouse
      changed_when: false

    - name: Ensure correct file modes for LightHouse files
      ansible.builtin.command:
        cmd: "chmod -R 755 /var/www/lighthouse"
      args:
        chdir: /var/www/lighthouse
      changed_when: false

    - name: Restart nginx to apply new configuration
      ansible.builtin.systemd:
        name: nginx
        state: restarted
      when: ansible_os_family in ["RedHat", "Debian"]
