---
- name: Install and configure SonarQube and Nexus with passwordless sudo
  hosts: all
  become: yes
  vars:
    # Common variables
    java_home: /usr/lib/jvm/jdk
    sonarqube_user: sonar
    sonarqube_group: sonar
    sonarqube_home: /opt/sonarqube
    sonarqube_version: 9.9.0.65466
    sonarqube_download_url: "https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonarqube_version }}.zip"
    nexus_user: nexus
    nexus_group: nexus
    nexus_version: 3.47.1-01
    nexus_home: /opt/nexus
    nexus_download_url: "https://download.sonatype.com/nexus/3/nexus-{{ nexus_version }}-unix.tar.gz"
    ansible_user: centos  # Change this to the correct user if necessary

  pre_tasks:
    - name: Allow passwordless sudo for the user
      become: yes
      become_user: root
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: "^{{ ansible_user }} ALL="
        line: "{{ ansible_user }} ALL=(ALL) NOPASSWD: ALL"
        validate: 'visudo -cf %s'

  tasks:
    # Install prerequisites
    - name: Install required packages
      yum:
        name:
          - wget
          - unzip
          - java-1.8.0-openjdk
          - java-1.8.0-openjdk-devel
        state: present

    # SonarQube installation tasks
    - name: Create SonarQube group
      group:
        name: "{{ sonarqube_group }}"
        state: present

    - name: Create SonarQube user
      user:
        name: "{{ sonarqube_user }}"
        group: "{{ sonarqube_group }}"
        home: "{{ sonarqube_home }}"
        shell: /bin/bash
        create_home: no

    - name: Download SonarQube
      get_url:
        url: "{{ sonarqube_download_url }}"
        dest: /tmp/sonarqube-{{ sonarqube_version }}.zip

    - name: Extract SonarQube
      unarchive:
        src: /tmp/sonarqube-{{ sonarqube_version }}.zip
        dest: /opt/
        remote_src: yes
      notify: change_owner

    - name: Create symlink for SonarQube
      file:
        src: "/opt/sonarqube-{{ sonarqube_version }}"
        dest: "{{ sonarqube_home }}"
        state: link

    - name: Set ownership for SonarQube
      file:
        path: "{{ sonarqube_home }}"
        owner: "{{ sonarqube_user }}"
        group: "{{ sonarqube_group }}"
        recurse: yes

    - name: Configure SonarQube
      lineinfile:
        dest: "{{ sonarqube_home }}/conf/sonar.properties"
        regexp: "^#?sonar.jdbc.username="
        line: "sonar.jdbc.username=sonar"
      with_items:
        - { regexp: "^#?sonar.jdbc.password=", line: "sonar.jdbc.password=sonar" }
        - { regexp: "^#?sonar.jdbc.url=", line: "sonar.jdbc.url=jdbc:postgresql://localhost:5432/sonar" }

    - name: Configure SonarQube as a service
      template:
        src: sonar.service.j2
        dest: /etc/systemd/system/sonar.service
      notify:
        - enable_sonarqube_service

    # Nexus installation tasks
    - name: Create Nexus group
      group:
        name: "{{ nexus_group }}"
        state: present

    - name: Create Nexus user
      user:
        name: "{{ nexus_user }}"
        group: "{{ nexus_group }}"
        home: "{{ nexus_home }}"
        shell: /bin/bash
        create_home: no

    - name: Download Nexus
      get_url:
        url: "{{ nexus_download_url }}"
        dest: /tmp/nexus-{{ nexus_version }}-unix.tar.gz

    - name: Extract Nexus
      unarchive:
        src: /tmp/nexus-{{ nexus_version }}-unix.tar.gz
        dest: /opt/
        remote_src: yes
      notify: change_owner

    - name: Create symlink for Nexus
      file:
        src: "/opt/nexus-{{ nexus_version }}"
        dest: "{{ nexus_home }}"
        state: link

    - name: Set ownership for Nexus
      file:
        path: "{{ nexus_home }}"
        owner: "{{ nexus_user }}"
        group: "{{ nexus_group }}"
        recurse: yes

    - name: Configure Nexus as a service
      template:
        src: nexus.service.j2
        dest: /etc/systemd/system/nexus.service
      notify:
        - enable_nexus_service

  handlers:
    - name: change_owner
      command: chown -R {{ item.user }}:{{ item.group }} {{ item.path }}
      with_items:
        - { user: "{{ sonarqube_user }}", group: "{{ sonarqube_group }}", path: "{{ sonarqube_home }}" }
        - { user: "{{ nexus_user }}", group: "{{ nexus_group }}", path: "{{ nexus_home }}" }

    - name: enable_sonarqube_service
      systemd:
        name: sonar
        enabled: yes
        state: started

    - name: enable_nexus_service
      systemd:
        name: nexus
        enabled: yes
        state: started
